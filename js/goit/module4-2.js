// TODO:============================Task-1=============================

/*
Написати систему контролю банку.

Властивості:
- список користувачів [userId, FIO,'password']
- список рахунків [userId, accountNumber, value]

Методи:
- додати користувача
- видалити користувача

- створити рахунок
- видалити рахунок

- додати гроші на рахунок
- зняти гроші з рахунка
*/

/*
 * Типів транзацький лише два.
 * Можна покласти чи зняти гроші з рахунку.
 */
const Transaction = {
  DEPOSIT: 'deposit',
  WITHDRAW: 'withdraw',
};

/*
 * Кожна транзакція це об'єкт із властивостями: id, type та amount
 */

const account = {
  // Поточний баланс рахунку
  balance: 0,

  // Історія транзакцій
  transactions: [],

  /*
   * Метод створює та повертає об'єкт транзакції.
   * Приймає суму та тип транзакції.
   */
  createTransaction(amount, type) {
    const transaction = {
      id: Math.random(),
      type,
      amount,
    };

    return transaction;
  },

  /*
   * Метод, що відповідає за додавання суми до балансу.
   * Приймає суму танзакції.
   * Викликає createTransaction для створення об'єкта транзакції
   * після чого додає його в історію транзакцій
   */
  deposit(amount) {
    this.balance += amount;
    const t = this.createTransaction(amount, Transaction.DEPOSIT);
    this.transactions.push(t);
  },

  /*
   * Метод, що відповідає за зняття суми з балансу.
   * Приймає суму танзакції.
   * Викликає createTransaction для створення об'єкта транзакції
   * Після чого додає його в історію транзакцій.
   *
   * Якщо amount більше ніж поточний баланс, виводь повідомлення
   * про те, що зняття такої суми не можливе, недостатньо коштів.
   */
  withdraw(amount) {
    if (this.balance >= amount) {
      this.balance -= amount;
      const t = this.createTransaction(amount, Transaction.WITHDRAW);
      this.transactions.push(t);
    } else {
      console.log('Error');
    }
  },

  /*
   * Метод повертає поточний баланс
   */
  getBalance() {
    return this.balance;
  },

  /*
   * Метод шукає та повертає об'єкт транзації по id
   */
  getTransactionDetails(id) {
    for (const item of this.transactions) {
      if (item.id === id) {
        return item;
      }
    }
  },

  /*
   * Метод повертає кількість коштів
   * певного типу транзакції з усієї історії транзакцій
   */
  getTransactionTotal(type) {
    let total = 0;

    for (const item of this.transactions) {
      if (item.type === type) {
        total += item.amount;
      }
    }

    return total;
  },
};

// TODO:============================Task-2=============================
/*
Менеджер завдань: Створіть функцію яка створює та повертає обьект завдання. Об'єкт task, який буде містити властивості Name, deadline, priority та done. Додайте методи для відмітки завдання як виконаного та для виведення інформаціїпро завдання.

*/
// TODO:============================Task-3=============================
/*
Каталог товарів: Створіть каталог товарів, де кожен товар буде об'єктом з властивостями назва, ціна та кількість. Додайте методи для додавання товару, видалення товару та підрахунку загальної вартості.


*/
// TODO:============================Task-4=============================
/*
Система реєстрації: Створіть систему реєстрації користувачів, де кожен користувач буде об'єктом з властивостями ім'я, email, пароль тощо. Додайте метод для перевірки введеного пароля при вході.


*/
// TODO:============================Task-5=============================
/*
Онлайн-книга: Створіть програму для ведення списку прочитаних книг. Кожна книга буде об'єктом з властивостями назва, автор, рік видання та прочитано (true/false). Додайте методи для відмітки книги як прочитаної та виведення статистики про прочитані книги.


*/
// TODO:============================Task-6=============================
/*
Ігровий персонаж: Створіть об'єкт, який представляє ігрового персонажа. Додайте властивості, такі як ім'я, рівень, здоров'я, атака тощо. Реалізуйте методи для атаки інших персонажів та відновлення здоров'я.


*/
// TODO:============================Task-7=============================
/*
Список контактів: Створіть програму для управління списком контактів. Кожен контакт буде об'єктом з властивостями ім'я, телефон, email тощо. Додайте методи для додавання, видалення та пошуку контактів.


*/
// TODO:============================Task-8=============================
/*
Календар подій: Створіть календар подій, де кожна подія буде об'єктом з властивостями назва, дата, місце та повідомлення. Додайте методи для додавання події, видалення події та перегляду подій на певну дату.


*/
// TODO:============================Task-9=============================
/*
Онлайн-магазин: Створіть онлайн-магазин з можливістю додавання товарів у кошик та оформлення замовлення. Кожен товар буде об'єктом з властивостями назва, ціна, наявність тощо. Реалізуйте методи для додавання товару у кошик, підрахунку загальної вартості та оформлення замовлення.


*/
// TODO:============================Task-10============================
/*
Пошук інформації: Створіть програму, яка дозволить шукати інформацію в тексті. Ви створюєте об'єкт зі збереженими текстовими даними та методами для пошуку заданого слова або фрази у тексті.
*/
// TODO:============================Task-11============================
/*
Банківський рахунок: Створіть об'єкт account, який міститиме інформацію про банківський рахунок користувача, таку як ім'я, баланс та історія транзакцій. Додайте методи для додавання та витрати коштів, а також для виведення історії транзакцій.
*/
